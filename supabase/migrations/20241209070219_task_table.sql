CREATE TABLE public.task (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    project_id BIGINT NOT NULL REFERENCES public.project(id) ON DELETE CASCADE,
    task_status_id BIGINT NOT NULL REFERENCES public.task_status(id),
    task_priority_id BIGINT NOT NULL REFERENCES public.task_priority(id),
    assigned_user_id UUID NOT NULL REFERENCES public.profile(user_id),
    name TEXT NOT NULL,
    description TEXT NOT NULL,
    deadline DATE NOT NULL
);

DO $$
BEGIN
    PERFORM public.add_audit_columns('public', 'task');
END $$;

ALTER TABLE public.task ENABLE ROW LEVEL SECURITY;

CREATE POLICY "Enable select for assigned users or task owners" 
ON public.task 
FOR SELECT 
TO authenticated 
USING (
    (assigned_user_id = (SELECT auth.uid())) 
    OR (created_by = (SELECT auth.uid()))
);

CREATE POLICY "Enable insert for Project Managers" 
ON public.task 
FOR INSERT 
TO authenticated 
WITH CHECK ((SELECT public.has_role('Project Manager')));

CREATE POLICY "Enable update for assigned users or task owners" 
ON public.task 
FOR UPDATE 
TO authenticated 
USING (
    (assigned_user_id = (SELECT auth.uid())) 
    OR (created_by = (SELECT auth.uid()))
);

CREATE POLICY "Enable delete for task owners" 
ON public.task 
FOR DELETE 
TO authenticated 
USING ((created_by = (SELECT auth.uid())));
